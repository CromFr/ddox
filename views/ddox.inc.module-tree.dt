- import ddox.entities;

- void moduleNavTree(Package pack)
	ul.tree-view
		- foreach (i, p; pack.packages)
			- auto subpackmod = getPackageModule(p);
			- bool is_active = !pack.parent && !info.node.parent || p.isAncestorOf(info.node) || subpackmod && subpackmod.isAncestorOf(info.node) || subpackmod is info.node;
			li.tree-view(class=is_active ? "" : "collapsed")
				.package(class=info.node is subpackmod || subpackmod && subpackmod.isAncestorOf(info.node) ? "selected" : "")
					- if (subpackmod)
						a(href=info.linkTo(subpackmod))= subpackmod.name
					- else
						|= p !is info.rootPackage ? p.name : null
				- moduleNavTree(p);

		- foreach(m; pack.modules)
			- if (pack.findChild!Package(m.name))
				- continue;
			li
				.module(class=info.node is m || m.isAncestorOf(info.node) ? "selected" : "")
					a(href=info.linkTo(m))= m.name

- moduleNavTree(info.rootPackage);
